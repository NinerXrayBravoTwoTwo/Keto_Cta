import pandas as pd
import numpy as np

# Input dataset
data = {
        "Id": [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],
        "Cac0": [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,2,0,0,4,0,37,0,9,27,68,63,1,58,4,0,21,10,3,12,39,2,21,69,360,81,53,66,80,191,217,17,222,211,101,88,135,388,119,295,199,291,175,556,47,265,194,221],
        "Cac1": [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,1,1,0,0,0,6,0,37,0,13,41,62,67,0,39,8,3,21,18,5,17,49,7,31,105,353,97,103,97,81,218,245,35,253,254,103,100,135,400,124,300,230,351,193,768,54,322,272,256],
        "Ncpv0": [9.3,193.3,6.5,1.8,15.6,10.4,48.4,65.6,3.8,42.8,21.7,4.9,27.8,22.4,26.5,0,6.3,8,0,45.7,13.5,1.7,21,5.7,16.5,0,23.3,5.3,101.1,9.9,3.3,0,15.4,24,28.3,20.7,2.2,12.4,23.6,17.2,24.2,1.4,36.7,18.9,3.8,20,61.8,26.6,39.7,26.3,19.6,20.8,67.1,64.9,68.2,15.5,94.7,82.8,42.4,4.4,12.8,45.3,77.3,53.3,113.6,91.1,139.4,171.5,53.7,52.1,164.2,290.2,83.3,141.1,106.8,53.4,174.6,82.4,130.5,78,163.9,233.8,169,58.9,244.9,365.6,100.5,238.5,46.2,147.2,183.5,252.3,290.8,174.9,73.4,255.8,105.7,200.3,71.8,450.6],
        "Ncpv1": [18.8,212.2,23.2,9.1,24.8,11.8,80.4,82.5,13.1,64.4,44.4,16.7,39.3,55.9,70.9,0,19.8,15.3,13.6,64,20.7,6.8,67.3,9.9,58.4,9.2,25.7,5.3,156.6,39.4,9,3.9,25.7,40.4,58,26.1,9.7,23,44.3,25.4,35.3,4.6,80.2,21.9,4,32.8,98.3,104,57,60.7,42,45.7,166.7,68.5,71.4,31,130.8,144.9,64.7,11.2,15.2,51.6,96.1,104.7,162,119.7,153.6,211.9,99.3,62.5,220,301,97.7,191,116.5,112.2,210,168.4,179,89.6,248.2,345.8,182.2,76.4,357.9,428.5,180.3,307.3,41.7,194.8,213.8,319.7,378.9,245,92.7,389.6,166.7,275.1,103.6,606.5]
}
df = pd.DataFrame(data)

# Calculate doubling times using exponential growth assumption
# growth rate k = ln(C1/C0) / t  => doubling time = ln(2)/k
df["CAC_rate"] = np.log(df["Cac1"]/df["Cac0"]) / 1.0
df["CAC_dt"] = np.log(2) / df["CAC_rate"]

df["NCPV_rate"] = np.log(df["Ncpv1"]/df["Ncpv0"]) / 1.0
df["NCPV_dt"] = np.log(2) / df["NCPV_rate"]

# Compute average doubling times (ignoring negative/0 growth)
cac_dt_mean = df[df["CAC_dt"] > 0]["CAC_dt"].mean()
ncpv_dt_mean = df[df["NCPV_dt"] > 0]["NCPV_dt"].mean()

# Print the results
print("CAC Doubling Time Mean:", cac_dt_mean)
print("NCPV Doubling Time Mean:", ncpv_dt_mean)
print("\nDataFrame with Id, CAC_dt, and NCPV_dt:\n", df[["Id", "CAC_dt", "NCPV_dt"]])